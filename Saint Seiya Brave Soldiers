HLE: ! path: /dev_hdd0/game/
LDR: ! Loading 'd:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/game/bles01936/PS3_GAME/USRDIR/BOOT.BIN'...
LDR: !  
LDR: ! Mount info:
LDR: ! dev_usb000/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_usb000/
LDR: ! dev_flash/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_flash/
LDR: ! host_root/ -> 
LDR: ! dev_hdd0/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/
LDR: ! dev_hdd1/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd1/
LDR: ! dev_bdvd/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/game/bles01936/ps3_game/../
LDR: ! dev_usb/ -> d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_usb000/
LDR: !  
LDR: ! Title: Saint Seiya: Brave Soldiers
LDR: ! Serial: BLES01936
LDR: !  
LDR: E loader::init() failed: Broken file
MEM: ! Initializing memory: base_addr = 0x141f50000
MEM: ! Memory initialized.
LDR: ! Imported function 'cellFsClose' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsOpendir' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsRead' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsReaddir' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsOpen' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsStat' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsFstat' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsClosedir' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsReadWithOffset' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsFtruncate' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsUnlink' in 'sys_fs' module  (HLE)
LDR: W Unimplemented function 'cellFsWriteWithOffset' in 'sys_fs' module (HLE)
LDR: ! Imported function 'cellFsFsync' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsGetDirectoryEntries' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsLseek' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsSdataOpen' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsMkdir' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsWrite' in 'sys_fs' module  (HLE)
LDR: ! Imported function 'cellFsRename' in 'sys_fs' module  (HLE)
LDR: ! Imported function '_cellGcmInitBody' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function '_cellGcmFunc15' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetTiledPitchSize' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetPrepareFlip' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function '_cellGcmSetFlipCommand' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmAddressToOffset' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmIoOffsetToAddress' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmBindTile' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetFlipMode' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetTimeStamp' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetDefaultCommandWordSize' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetFlipStatus' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetDefaultSegmentWordSize' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetDefaultFifoSize' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmBindZcull' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmMapMainMemory' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetDisplayBuffer' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetControlRegister' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmUnbindZcull' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetFlipImmediate' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmResetFlipStatus' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmSetTileInfo' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function '_cellGcmSetFlipCommandWithWaitLabel' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmUnbindTile' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetConfiguration' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmUnmapEaIoAddress' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellGcmGetLabelAddress' in 'cellGcmSys' module  (HLE)
LDR: ! Imported function 'cellSysmoduleUnloadModule' in 'cellSysmodule' module  (HLE)
LDR: ! Imported function 'cellSysmoduleLoadModule' in 'cellSysmodule' module  (HLE)
LDR: ! Imported function 'cellSysmoduleIsLoaded' in 'cellSysmodule' module  (HLE)
LDR: ! Imported function 'cellSysutilCheckCallback' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSaveDataListLoad2' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellMsgDialogClose' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilEnableBgmPlayback' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSaveDataListSave2' in 'cellSysutil' module  (HLE)
LDR: W Unimplemented function 'cellOskDialogUnloadAsync' in 'cellSysutil' module (HLE)
LDR: ! Imported function 'cellSysutilGetSystemParamInt' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellMsgDialogAbort' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilGetBgmPlaybackStatus2' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellMsgDialogOpen2' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellMsgDialogProgressBarReset' in 'cellSysutil' module  (HLE)
LDR: W Unimplemented function 'cellOskDialogLoadAsync' in 'cellSysutil' module (HLE)
LDR: ! Imported function 'cellVideoOutGetState' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSaveDataAutoSave2' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellMsgDialogProgressBarInc' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilRegisterCallback' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilGetBgmPlaybackStatus' in 'cellSysutil' module  (HLE)
LDR: W Unimplemented function 'cellOskDialogSetKeyLayoutOption' in 'cellSysutil' module (HLE)
LDR: W Unimplemented function 'cellSaveDataFixedDelete' in 'cellSysutil' module (HLE)
LDR: ! Imported function 'cellSysutilDisableBgmPlayback' in 'cellSysutil' module  (HLE)
LDR: W Unimplemented function 'cellSaveDataDelete2' in 'cellSysutil' module (HLE)
LDR: W Unimplemented function 'cellOskDialogSetLayoutMode' in 'cellSysutil' module (HLE)
LDR: ! Imported function 'cellSaveDataAutoLoad2' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellVideoOutConfigure' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellVideoOutGetResolutionAvailability' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellVideoOutGetResolution' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellAudioOutConfigure' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellAudioOutGetConfiguration' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellAudioOutGetState' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilUnregisterCallback' in 'cellSysutil' module  (HLE)
LDR: ! Imported function 'cellSysutilGetSystemParamString' in 'cellSysutil' module  (HLE)
LDR: W Unimplemented function 'cellOskDialogSetInitialKeyLayout' in 'cellSysutil' module (HLE)
LDR: ! Imported function 'cellGameContentPermit' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGamePatchCheck' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameSetParamString' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameDataCheck' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameBootCheck' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameGetParamString' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameCreateGameData' in 'cellGame' module  (HLE)
LDR: ! Imported function 'cellGameGetSizeKB' in 'cellGame' module  (HLE)
LDR: ! Imported function 'sceNpBasicSendMessageGui' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicGetFriendListEntry' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreGetRankingByRangeAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreDestroyTitleCtx' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpProfileAbortGui' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreInit' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreGetRankingByNpIdAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicRegisterContextSensitiveHandler' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicAbortGui' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerUnregisterCallback' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicSetPresenceDetails2' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicRecvMessageAttachmentLoad' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetContentRatingFlag' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreCreateTransactionCtx' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicGetBlockListEntryCount' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicRecvMessageCustom' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreTerm' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScorePollAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetStatus' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicUnregisterHandler' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpDrmIsAvailable' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicGetFriendListEntryCount' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreCreateTitleCtx' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicAddPlayersHistoryAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetNetworkTime' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreDestroyTransactionCtx' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpProfileCallGui' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpUtilCmpNpId' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreGetBoardInfoAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicGetEvent' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerRegisterCallback' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetChatRestrictionFlag' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpScoreRecordScoreAsync' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpBasicGetBlockListEntry' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetNpId' in 'sceNp' module  (HLE)
LDR: ! Imported function 'sceNpManagerGetOnlineId' in 'sceNp' module  (HLE)
LDR: W Unimplemented function 'sceNpMatching2DestroyContext' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2GetWorldInfoList' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SearchRoom' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SignalingGetConnectionStatus' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2CreateServerContext' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2LeaveRoom' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SetRoomDataExternal' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2Term2' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SignalingGetConnectionInfo' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'Unknown func id: 0x2e42f94a' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2AbortRequest' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2GetServerInfo' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2GetEventData' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2GetRoomSlotInfoLocal' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNp2Init' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2JoinRoom' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2KickoutRoomMember' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2ContextStartAsync' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2RegisterContextCallback' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SetRoomDataInternal' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SignalingGetPingInfo' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2GetServerIdListLocal' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'Unknown func id: 0x98f74c9a' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2CreateContext' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2RegisterSignalingCallback' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNp2Term' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2SetDefaultRequestOptParam' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'Unknown func id: 0xdbe84071' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2RegisterRoomEventCallback' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2CreateJoinRoom' in 'sceNp2' module (HLE)
LDR: W Unimplemented function 'sceNpMatching2Init2' in 'sceNp2' module (HLE)
LDR: W Unknown module 'sceNpTus'
LDR: ! Imported function 'sceNpTusSetMultiSlotVariableAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusCreateTransactionCtx' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusPollAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusTerm' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusDestroyTitleCtx' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusAbortTransaction' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusDestroyTransactionCtx' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusGetDataAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusGetMultiSlotDataStatusAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusCreateTitleCtx' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusInit' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusAddAndGetVariableVUserAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusWaitAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusGetMultiSlotVariableAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusDeleteMultiSlotVariableVUserAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusSetDataAsync' in 'sceNpTus' module  (HLE)
LDR: ! Imported function 'sceNpTusGetMultiSlotVariableVUserAsync' in 'sceNpTus' module  (HLE)
LDR: W Unknown module 'cellSysutilAvc2'
LDR: ! Imported function 'cellSysutilAvc2GetPlayerInfo' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2StopStreaming' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2StartVoiceDetection' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2UnloadAsync' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2StopVoiceDetection' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2LoadAsync' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2SetSpeakerVolumeLevel' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2SetStreamingTarget' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2GetSpeakerVolumeLevel' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2JoinChatRequest' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2StartStreaming' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2InitParam' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2LeaveChatRequest' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2EnumPlayers' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellSysutilAvc2SetAttribute' in 'cellSysutilAvc2' module  (HLE)
LDR: ! Imported function 'cellRtcSetTick' in 'cellRtc' module  (HLE)
LDR: ! Imported function 'cellRtcGetTick' in 'cellRtc' module  (HLE)
LDR: ! Imported function 'cellRtcConvertLocalTimeToUtc' in 'cellRtc' module  (HLE)
LDR: ! Imported function 'cellRtcGetCurrentTick' in 'cellRtc' module  (HLE)
LDR: ! Imported function 'cellRtcConvertUtcToLocalTime' in 'cellRtc' module  (HLE)
LDR: ! Imported function '_cellSpursAttributeInitialize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursInitializeWithAttribute' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursFinalize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursAttributeSetNamePrefix' in 'cellSpurs' module  (HLE)
LDR: ! Imported function '_cellSpursTasksetAttributeInitialize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursCreateTaskWithAttribute' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursDestroyTaskset2' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursEventFlagDetachLv2EventQueue' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursEventFlagWait' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursCreateTaskset2' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursDetachLv2EventQueue' in 'cellSpurs' module  (HLE)
LDR: ! Imported function '_cellSpursEventFlagInitialize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursTasksetAttributeSetName' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursTryJoinTask2' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursEventFlagAttachLv2EventQueue' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursJoinTaskset' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursShutdownTaskset' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursJoinTask2' in 'cellSpurs' module  (HLE)
LDR: ! Imported function '_cellSpursTaskAttributeInitialize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursAttachLv2EventQueue' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursCreateTasksetWithAttribute' in 'cellSpurs' module  (HLE)
LDR: ! Imported function '_cellSpursTasksetAttribute2Initialize' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursCreateTask2' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellSpursEventFlagSet' in 'cellSpurs' module  (HLE)
LDR: ! Imported function 'cellRescSetWaitFlip' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescSetDsts' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescResetFlipStatus' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescSetDisplayMode' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescSetConvertAndFlip' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescExit' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescInit' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescGetBufferSize' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescSetSrc' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescSetBufferAddress' in 'cellResc' module  (HLE)
LDR: ! Imported function 'cellRescGetFlipStatus' in 'cellResc' module  (HLE)
LDR: W Unknown module 'cellSysutilAvconfExt'
LDR: ! Imported function 'cellVideoOutSetGamma' in 'cellSysutilAvconfExt' module  (HLE)
LDR: ! Imported function 'cellAudioCreateNotifyEventQueue' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioInit' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioSetNotifyEventQueue' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioPortClose' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioSetPortLevel' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioPortStart' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioQuit' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioPortOpen' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioAddData' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioRemoveNotifyEventQueue' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioPortStop' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellAudioGetPortConfig' in 'cellAudio' module  (HLE)
LDR: ! Imported function 'cellFontCreateRenderer' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontGetHorizontalLayout' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontDestroyRenderer' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontEndLibrary' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontBindRenderer' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontSetScalePoint' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontEnd' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontRenderCharGlyphImage' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontRenderSurfaceInit' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontOpenFontset' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontCloseFont' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontGetCharGlyphMetrics' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontInitializeWithRevision' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontUnbindRenderer' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontSetResolutionDpi' in 'cellFont' module  (HLE)
LDR: ! Imported function 'cellFontInitLibraryFreeTypeWithRevision' in 'cellFontFT' module  (HLE)
LDR: W Unimplemented function 'SJISstoUCS2s' in 'cellL10n' module (HLE)
LDR: ! Imported function 'sys_net_initialize_network_ex' in 'sys_net' module  (HLE)
LDR: ! Imported function 'recvfrom' in 'sys_net' module  (HLE)
LDR: ! Imported function 'listen' in 'sys_net' module  (HLE)
LDR: W Unimplemented function 'socketselect' in 'sys_net' module (HLE)
LDR: ! Imported function '_sys_net_errno_loc' in 'sys_net' module  (HLE)
LDR: ! Imported function 'connect' in 'sys_net' module  (HLE)
LDR: ! Imported function 'socketclose' in 'sys_net' module  (HLE)
LDR: ! Imported function 'setsockopt' in 'sys_net' module  (HLE)
LDR: ! Imported function 'sys_net_abort_socket' in 'sys_net' module  (HLE)
LDR: ! Imported function 'sendto' in 'sys_net' module  (HLE)
LDR: ! Imported function 'socket' in 'sys_net' module  (HLE)
LDR: ! Imported function 'bind' in 'sys_net' module  (HLE)
LDR: ! Imported function 'sys_net_show_ifconfig' in 'sys_net' module  (HLE)
LDR: ! Imported function 'sys_net_finalize_network' in 'sys_net' module  (HLE)
LDR: ! Imported function 'accept' in 'sys_net' module  (HLE)
LDR: ! Imported function 'inet_addr' in 'sys_net' module  (HLE)
LDR: ! Imported function 'send' in 'sys_net' module  (HLE)
LDR: ! Imported function 'recv' in 'sys_net' module  (HLE)
LDR: ! Imported function 'cellNetCtlNetStartDialogLoadAsync' in 'cellNetCtl' module  (HLE)
LDR: ! Imported function 'cellNetCtlNetStartDialogUnloadAsync' in 'cellNetCtl' module  (HLE)
LDR: ! Imported function 'cellNetCtlTerm' in 'cellNetCtl' module  (HLE)
LDR: ! Imported function 'cellNetCtlGetState' in 'cellNetCtl' module  (HLE)
LDR: ! Imported function 'cellNetCtlInit' in 'cellNetCtl' module  (HLE)
LDR: ! Imported function 'cellSyncQueueInitialize' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncQueueSize' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncQueuePop' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncMutexUnlock' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncQueueClear' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncMutexInitialize' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellSyncMutexTryLock' in 'cellSync' module  (HLE)
LDR: ! Imported function 'cellPadInit' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbGetConfiguration' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbSetLEDStatus' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbInit' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbCnvRawCode' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellPadEnd' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellPadSetPortSetting' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellMouseGetInfo' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellMouseGetDataList' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellPadGetData' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbSetCodeType' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellPadGetInfo2' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbEnd' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellMouseInit' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellMouseEnd' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellPadSetActDirect' in 'sys_io' module  (HLE)
LDR: ! Imported function 'cellKbRead' in 'sys_io' module  (HLE)
LDR: ! Imported function 'sceNpTrophyRegisterContext' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyCreateHandle' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyGetRequiredDiskSpace' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyDestroyContext' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyInit' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyGetGameInfo' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyDestroyHandle' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyUnlockTrophy' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyTerm' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyGetTrophyUnlockState' in 'sceNpTrophy' module  (HLE)
LDR: ! Imported function 'sceNpTrophyCreateContext' in 'sceNpTrophy' module  (HLE)
LDR: W Unknown module 'cellOskExtUtility'
LDR: ! Imported function 'cellOskDialogExtRegisterConfirmWordFilterCallback' in 'cellOskExtUtility' module  (HLE)
LDR: ! Imported function 'cellSpursJobQueueAttributeInitialize' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'cellSpursShutdownJobQueue' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'cellSpursJoinJobQueue' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function '_cellSpursCreateJobQueueWithJobDescriptorPool' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function '_cellSpursJobQueuePort2CopyPushJobBody' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'cellSpursJobQueuePort2Destroy' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function '_cellSpursJobQueuePort2PushJobBody' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'cellSpursJobQueuePort2Create' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'cellSpursJobQueuePort2Sync' in 'cellSpursJq' module  (HLE)
LDR: ! Imported function 'sys_lwmutex_lock' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwmutex_unlock' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwcond_destroy' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_ppu_thread_create' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwcond_wait' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function '_sys_process_atexitspawn' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwmutex_create' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_ppu_thread_get_id' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_prx_register_library' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_initialize_tls' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_time_get_system_time' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function '_sys_process_at_Exitspawn' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_prx_exitspawn_with_level' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwmutex_trylock' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_ppu_thread_exit' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwmutex_destroy' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwcond_create' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_process_exit' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwcond_signal_all' in 'sysPrxForUser' module  (HLE)
LDR: ! Imported function 'sys_lwcond_signal' in 'sysPrxForUser' module  (HLE)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7d28, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 3
HLE: W {PPU[1] Thread (main_thread)[0x00960848]} sys_memory warning: sys_memory_get_user_memory_size(mem_info_addr=0xd000fc04)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7b28, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 4
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da72b0, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 5
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da72d8, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 6
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7300, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 7
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da71e8, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 8
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7210, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 9
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7238, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 10
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7260, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 11
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da7288, attr_addr=0xf9f520)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [_lc_mtx] (attribute=0x12): sq_id = 12
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d5a1b0, attr_addr=0xd000faf0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 13
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57e70, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 14
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57ec0, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 15
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57f08, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 16
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57f50, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 17
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57f98, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 18
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57fe0, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 19
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d58028, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 20
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d58070, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 21
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d580b8, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 22
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d58100, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 23
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d58148, attr_addr=0xd000fad0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 24
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57cb0, attr_addr=0xd000fb70)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 25
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd7b90, attr_addr=0xd000fb70)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 26
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d5ef30, attr_addr=0xd000faa0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 27
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x1d5ef30): id = 28
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d5ef58, attr_addr=0xd000faa0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 29
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x1d5ef58): id = 30
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d5ef80, attr_addr=0xd000faa0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 31
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x1d5ef80): id = 32
HLE: W {PPU[1] Thread (main_thread)[0x0102e0b8]} cellSysutil warning: cellSysutilRegisterCallback(slot=2, func_addr=0x1034a30, userdata=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102e0b8]} cellSysutil warning: cellSysutilRegisterCallback(slot=3, func_addr=0x1046a38, userdata=0x1d5ef18)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_FS)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_RTC)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d5ecc8, attr_addr=0xd000fa10)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 33
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_RESC)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_AVCONF_EXT)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30110110, attr_addr=0xd000f950)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 34
HLE: W {PPU[1] Thread (main_thread)[0x0102a004]} cellGcmSys warning: _cellGcmInitBody(context_addr=0x1b954e0, cmdSize=0xc0000, ioSize=0x100000, ioAddress=0x30200000)
HLE: W {PPU[1] Thread (main_thread)[0x0102a004]} cellGcmSys warning: *** local memory(addr=0xc0000000, size=0xf900000)
HLE: W {PPU[1] Thread (main_thread)[0x0102a004]} cellGcmSys warning: cellGcmInit(): 256MB io address space used
HLE: W {PPU[1] Thread (main_thread)[0x0102a004]} cellGcmSys warning: cellGcmMapEaIoAddress(ea=0x30200000, io=0x0, size=0x100000)
RSX: ! {RSXThread} RSX thread started
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30110158, attr_addr=0xd000f950)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 35
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301101d8, attr_addr=0xd000f8c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 36
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30110258, attr_addr=0xd000f8c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 37
HLE: W {PPU[1] Thread (main_thread)[0x0102a0b8]} cellGcmSys warning: cellGcmMapMainMemory(ea=0x30500000,size=0x800000,offset_addr=0xd000f8a0)
HLE: W {PPU[1] Thread (main_thread)[0x01dd0004]} sys_io warning: cellPadInit(max_connect=7)
HLE: W {PPU[1] Thread (main_thread)[0x0102e124]} cellSysutil warning: cellVideoOutGetResolutionAvailability(videoOut=0, resolutionId=0x2, option_addr=0x0, aspect=0x0, option=0x46966b0)
HLE: W {PPU[1] Thread (main_thread)[0x0102e118]} cellSysutil warning: cellVideoOutConfigure(videoOut=0, config_addr=0xd000f9b0, option_addr=0x0, waitForEvent=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a064]} cellGcmSys warning: cellGcmSetFlipMode(mode=2)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=0, location=0, offset=0, size=11796480, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=2, location=0, offset=11796480, size=3801088, pitch=5120, comp=10, base=0, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=2)
HLE: W {PPU[1] Thread (main_thread)[0x0102e148]} cellSysutil warning: cellAudioOutGetConfiguration(audioOut=0, config_addr=0xd000f940, option_addr=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102e148]} cellSysutil warning: cellAudioOutGetConfiguration(audioOut=0, config_addr=0xd000f9c0, option_addr=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102e13c]} cellSysutil warning: cellAudioOutConfigure(audioOut=0, config_addr=0xd000f9c0, option_addr=0x0, waitForEvent=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102e154]} cellSysutil warning: cellAudioOutGetState(audioOut=0x0, deviceIndex=0x0, state_addr=0xd000f9d0)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2010]} cellAudio warning: cellAudioInit()
HLE: ! {Audio Thread} cellAudio : Audio thread started
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30363948, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 38
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30363980, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 39
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x303639b8, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 40
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x303639f0, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 41
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30363a28, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 42
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30363a60, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 43
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301716c0, attr_addr=0xd000f7c0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 44
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301718b8, attr_addr=0xd000f7e0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 45
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30171938, attr_addr=0xd000f7d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 46
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301719b8, attr_addr=0xd000f7d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 47
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30171a38, attr_addr=0xd000f7d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 48
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30171ab8, attr_addr=0xd000f7d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 49
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30171b30, attr_addr=0xd000f7d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 50
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57d68, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 51
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x1d57d68): id = 52
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57d88, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 53
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57da8, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 54
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57dc8, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 55
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57de8, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 56
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d57e08, attr_addr=0xd000f8d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 57
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc130, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 58
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc278, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 59
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc3c0, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 60
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc508, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 61
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc650, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 62
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc798, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 63
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dc8e0, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 64
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x301dca28, attr_addr=0xd000f800)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 65
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30113908, attr_addr=0xd000f740)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 66
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30380c10, attr_addr=0xd000f740)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 67
HLE: W {PPU[1] Thread (main_thread)[0x0102c01c]} cellSysmodule warning: cellSysmoduleIsLoaded(CELL_SYSMODULE_FS)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [Em File Thread] (detached, entry=0x1044fa0): id = 68
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd4d98, attr_addr=0xd000f960)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 69
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd7758, attr_addr=0xd000f860)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 70
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd7778, attr_addr=0xd000f860)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 71
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd77d8, attr_addr=0xd000f8e0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 72
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd7990, attr_addr=0xd000f890)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 73
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd5228, attr_addr=0xd000f670)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 74
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd52c8, attr_addr=0xd000f670)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 75
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1cd5278, attr_addr=0xd000f670)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 76
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1b47d10, attr_addr=0xd000f5e0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 77
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a414c8, attr_addr=0xd000f610)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 78
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a41478, attr_addr=0x1a41490)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [NpBasic] (attribute=0x22): sq_id = 79
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a644d8, attr_addr=0xd000f5f0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 80
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a64600, attr_addr=0xd000f680)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 81
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1b3f070, attr_addr=0xd000f5d0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 82
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1b3f148, attr_addr=0xd000f5e0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 83
HLE: W {PPU[1] Thread (main_thread)[0x0102e04c]} cellSysutil warning: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_LANG
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da6d60, attr_addr=0xd000f370)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 84
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x304e3528, attr_addr=0xd000f400)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 85
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x304e3540, attr_addr=0xd000f3f0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 86
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x304e3540): id = 87
HLE: W {PPU[1] Thread (main_thread)[0x0102c01c]} cellSysmodule warning: cellSysmoduleIsLoaded(CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SYSUTIL_NP_TROPHY)
HLE: W {PPU[1] Thread (main_thread)[0x01dd207c]} sceNpTrophy warning: sceNpTrophyCreateContext(context_addr=0x304e3510, commID_addr=0xb24848, commSign_addr=0xb248d4, options=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x01dd2010]} sceNpTrophy warning: sceNpTrophyCreateHandle(handle_addr=0x304e3514)
HLE: W {PPU[1] Thread (main_thread)[0x01dd201c]} sceNpTrophy warning: sceNpTrophyGetRequiredDiskSpace(context=0, handle=0, reqspace_addr=0xd000f470, options=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102c01c]} cellSysmodule warning: cellSysmoduleIsLoaded(CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[1] Thread (main_thread)[0x01db0034]} cellGame warning: cellGameBootCheck(type_addr=0xd000f1f0, attributes_addr=0xd000f1f4, size_addr=0xd000f1f8, dirName_addr=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x01db0040]} cellGame warning: cellGameGetParamString(id=100, buf_addr=0xd000f2f0, bufsize=10)
HLE: W {PPU[1] Thread (main_thread)[0x01db0040]} cellGame warning: cellGameGetParamString(id=0, buf_addr=0xd000f400, bufsize=128)
HLE: W {PPU[1] Thread (main_thread)[0x01db0040]} cellGame warning: cellGameGetParamString(id=106, buf_addr=0xd000f2e8, bufsize=6)
HLE: W {PPU[1] Thread (main_thread)[0x01db0004]} cellGame warning: cellGameContentPermit(contentInfoPath_addr=0xd000f300, usrdirPath_addr=0xd000f380)
HLE: W {PPU[1] Thread (main_thread)[0x0102c004]} cellSysmodule warning: cellSysmoduleUnloadModule(CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[1] Thread (main_thread)[0x01db0034]} cellGame warning: cellGameBootCheck(type_addr=0xd000f574, attributes_addr=0xd000f570, size_addr=0xd000f578, dirName_addr=0xd000f6d0)
HLE: W {PPU[1] Thread (main_thread)[0x01db0004]} cellGame warning: cellGameContentPermit(contentInfoPath_addr=0x1b8ff34, usrdirPath_addr=0x1b8ffb4)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [Installer:Setup] (detached, entry=0x1044fa0): id = 88
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102c01c]} cellSysmodule warning: cellSysmoduleIsLoaded(CELL_SYSMODULE_SYSUTIL_GAME)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01db0028]} cellGame warning: cellGameDataCheck(type=0x3, dirName_addr=0x31d75004, size_addr=0xd003f760)
HLE: E {PPU[88] Thread (Installer:Setup)[0x01db0058]} cellGame TODO: cellGameGetSizeKB
HLE: W {PPU[88] Thread (Installer:Setup)[0x01db0004]} cellGame warning: cellGameContentPermit(contentInfoPath_addr=0xd003f7a8, usrdirPath_addr=0xd003f828)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/resource/save/install_content_EU.lst" opened: fd = 89
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=89, sb_addr=0xd003f290)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=89, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=104 nread=0xffffffffd003f4e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=89, offset=0x0, buf_addr=0x32660280, buffer_size=104 nread=0xd003f590)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=89)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/ICON0.PNG" opened: fd = 90
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=90, sb_addr=0xd003f1e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=90)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/ICON0_17.PNG" opened: fd = 91
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=91, sb_addr=0xd003f1e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=91)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/PIC1.PNG" opened: fd = 92
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=92, sb_addr=0xd003f1e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=92)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/PIC1_17.PNG" opened: fd = 93
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=93, sb_addr=0xd003f1e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=93)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/resource/save/install_data.lst" opened: fd = 94
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=94, sb_addr=0xd003f290)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=94, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=14 nread=0xffffffffd003f4e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=94, offset=0x0, buf_addr=0x30152060, buffer_size=14 nread=0xd003f590)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=94)
HLE: ! {PPU[88] Thread (Installer:Setup)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/USRDIR/resource.cpk" opened: fd = 95
HLE: W {PPU[88] Thread (Installer:Setup)[0x0102804c]} sys_fs warning: cellFsFstat(fd=95, sb_addr=0xd003f1e0)
HLE: W {PPU[88] Thread (Installer:Setup)[0x01028004]} sys_fs warning: cellFsClose(fd=95)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d794f0, attr_addr=0xd000f120)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 96
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 97
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(97)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=97): id = 98
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS File Access 0] (joinable, entry=0x1047cf0): id = 99
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d7a2b8, attr_addr=0xd000f120)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 100
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 101
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(101)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=101): id = 102
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS Memory File System] (joinable, entry=0x1047cf0): id = 103
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d796e8, attr_addr=0xd000f120)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 104
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 105
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(105)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=105): id = 106
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS File Access 1] (joinable, entry=0x1047cf0): id = 107
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d798e0, attr_addr=0xd000f120)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 108
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 109
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(109)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=109): id = 110
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS File Access 2] (joinable, entry=0x1047cf0): id = 111
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d79ad8, attr_addr=0xd000f120)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 112
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 113
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(113)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=113): id = 114
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS File Access 3] (joinable, entry=0x1047cf0): id = 115
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d791a0, attr_addr=0xd000f2e0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 116
HLE: W {PPU[1] Thread (main_thread)[0x008b72c8]} sys_mutex warning: *** mutex created [] (protocol=0x2, recursive=true): id = 117
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition on recursive mutex(117)
HLE: W {PPU[1] Thread (main_thread)[0x008b7318]} sys_cond warning: *** condition created [] (mutex_id=117): id = 118
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI FS Data Decompression 0] (joinable, entry=0x1047cf0): id = 119
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x326c2c08, attr_addr=0xd000f360)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 120
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x326c2f88, attr_addr=0xd000f330)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 121
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x326d5078, attr_addr=0xd000f330)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 122
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d79030, attr_addr=0xd000f450)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 123
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d79078, attr_addr=0xd000f450)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 124
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d790c0, attr_addr=0xd000f450)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 125
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d79108, attr_addr=0xd000f450)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 126
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x326e60f0, attr_addr=0xd000f350)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 127
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x326e6470, attr_addr=0xd000f340)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 128
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d78ea0, attr_addr=0xd000f400)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 129
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [CRI Server Manager] (joinable, entry=0x1047cf0): id = 130
HLE: ! {PPU[107] Thread (CRI FS File Access 1)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/USRDIR/resource.cpk" opened: fd = 131
HLE: W {PPU[107] Thread (CRI FS File Access 1)[0x0102804c]} sys_fs warning: cellFsFstat(fd=131, sb_addr=0xd006f8d8)
HLE: W {PPU[107] Thread (CRI FS File Access 1)[0x01028004]} sys_fs warning: cellFsClose(fd=131)
HLE: ! {PPU[107] Thread (CRI FS File Access 1)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/USRDIR/resource.cpk" opened: fd = 132
HLE: W {PPU[107] Thread (CRI FS File Access 1)[0x0102804c]} sys_fs warning: cellFsFstat(fd=132, sb_addr=0xd006f8d8)
HLE: ! {PPU[1] Thread (main_thread)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/archive/adam_shader/VsUserShader.emz" opened: fd = 133
HLE: W {PPU[1] Thread (main_thread)[0x0102804c]} sys_fs warning: cellFsFstat(fd=133, sb_addr=0xd000f2b0)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=133, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=256 nread=0xffffffffd000f500)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=133, offset=0x10, buf_addr=0x1cd7bb0, buffer_size=95037 nread=0xd000f4d0)
HLE: W {PPU[1] Thread (main_thread)[0x01028004]} sys_fs warning: cellFsClose(fd=133)
HLE: ! {PPU[1] Thread (main_thread)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/archive/adam_shader/PsUserShader.emz" opened: fd = 134
HLE: W {PPU[1] Thread (main_thread)[0x0102804c]} sys_fs warning: cellFsFstat(fd=134, sb_addr=0xd000f2b0)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=134, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=256 nread=0xffffffffd000f500)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=134, offset=0x10, buf_addr=0x1cd7bb0, buffer_size=63787 nread=0xd000f4d0)
HLE: W {PPU[1] Thread (main_thread)[0x01028004]} sys_fs warning: cellFsClose(fd=134)
HLE: ! {PPU[1] Thread (main_thread)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/archive/adam_shader/VsBgShader.emz" opened: fd = 135
HLE: W {PPU[1] Thread (main_thread)[0x0102804c]} sys_fs warning: cellFsFstat(fd=135, sb_addr=0xd000f2b0)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=135, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=256 nread=0xffffffffd000f500)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=135, offset=0x10, buf_addr=0x1cd7bb0, buffer_size=48015 nread=0xd000f4d0)
HLE: W {PPU[1] Thread (main_thread)[0x01028004]} sys_fs warning: cellFsClose(fd=135)
HLE: ! {PPU[1] Thread (main_thread)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/archive/adam_shader/PsBgShader.emz" opened: fd = 136
HLE: W {PPU[1] Thread (main_thread)[0x0102804c]} sys_fs warning: cellFsFstat(fd=136, sb_addr=0xd000f2b0)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=136, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=256 nread=0xffffffffd000f500)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=136, offset=0x10, buf_addr=0x1cd7bb0, buffer_size=34107 nread=0xd000f4d0)
HLE: W {PPU[1] Thread (main_thread)[0x01028004]} sys_fs warning: cellFsClose(fd=136)
HLE: ! {PPU[1] Thread (main_thread)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/archive/adam_shader/setting_technique.emz" opened: fd = 137
HLE: W {PPU[1] Thread (main_thread)[0x0102804c]} sys_fs warning: cellFsFstat(fd=137, sb_addr=0xd000f2b0)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=137, offset=0x0, buf_addr=0x1cd7bb0, buffer_size=256 nread=0xffffffffd000f500)
HLE: W {PPU[1] Thread (main_thread)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=137, offset=0x10, buf_addr=0x1cd7bb0, buffer_size=7213 nread=0xd000f4d0)
HLE: W {PPU[1] Thread (main_thread)[0x01028004]} sys_fs warning: cellFsClose(fd=137)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=3, location=0, offset=15597568, size=23592960, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=3)
HLE: W {PPU[1] Thread (main_thread)[0x0102a0ac]} cellGcmSys warning: cellGcmBindZcull(index=2)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=4, location=0, offset=39190528, size=3932160, pitch=5120, comp=10, base=58, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=4)
HLE: W {PPU[1] Thread (main_thread)[0x0102a0ac]} cellGcmSys warning: cellGcmBindZcull(index=3)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=5, location=0, offset=43122688, size=4194304, pitch=4096, comp=10, base=118, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=5)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=6, location=0, offset=47316992, size=4194304, pitch=4096, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=6)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=7, location=0, offset=51511296, size=7864320, pitch=2560, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=7)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=8, location=0, offset=59375616, size=3932160, pitch=1280, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=8)
HLE: W {PPU[1] Thread (main_thread)[0x0102a0ac]} cellGcmSys warning: cellGcmBindZcull(index=6)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=9, location=0, offset=63307776, size=327680, pitch=1280, comp=10, base=182, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=9)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=10, location=0, offset=63635456, size=983040, pitch=2560, comp=10, base=187, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=11, location=0, offset=64618496, size=458752, pitch=1024, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=11)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=12, location=0, offset=65077248, size=262144, pitch=1024, comp=10, base=202, bank=3)
HLE: E {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys error: cellGcmSetTileInfo: bad compression mode! (10)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=12)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=13, location=0, offset=69861376, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=13)
HLE: W {PPU[1] Thread (main_thread)[0x0102a100]} cellGcmSys warning: cellGcmSetTileInfo(index=14, location=0, offset=73793536, size=3932160, pitch=5120, comp=0, base=0, bank=0)
HLE: W {PPU[1] Thread (main_thread)[0x0102a058]} cellGcmSys warning: cellGcmBindTile(index=14)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30117298, attr_addr=0xd000ec10)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 138
HLE: W {PPU[1] Thread (main_thread)[0x01dbc004]} cellSpurs warning: _cellSpursAttributeInitialize(attr_addr=0xd000f100, revision=2, sdkVersion=0x330000, nSpus=1, spuPriority=100, ppuPriority=400, exitIfNoWork=0)
HLE: W {PPU[1] Thread (main_thread)[0x01dbc028]} cellSpurs warning: cellSpursAttributeSetNamePrefix(attr_addr=0xd000f100, prefix_addr=0xf897a8, size=8)
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} cellSpurs warning: cellSpursInitializeWithAttribute(spurs_addr=0x32b95300, attr_addr=0xd000f100)
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 139
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 140
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 141
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 142
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 143
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 144
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 145
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 146
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 147
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 148
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 149
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 150
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 151
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 152
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 153
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuWkl] (protocol=0x2): id = 154
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_semaphore : *** semaphore created [_spuPrv] (protocol=0x2): id = 155
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu : *** SPU Thread Group created [CriAtom] (num=1, prio=100, type=0x0, container=0): id=156
HLE: E {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu TODO: Unsupported SPU Thread options (0x2)
SPU: E {PPU[1] Thread (main_thread)[0x01dbc010]} SPU JIT requires SSE4.1 instruction set support
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu warning: *** New SPU Thread [CriAtom] (ep=0x0, opt=0x2, a1=0x0, a2=0x0, a3=0x0, a4=0x0): id=157, spu_offset=0x30057000
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_lwmutex : *** lwmutex created [_spuPrv] (attribute=0x22): sq_id = 158
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_lwcond warning: *** lwcond created [_spuPrv] (lwmutex_addr=0x32b960b0): id = 159
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_event warning: *** event_queue created [_spuPrv] (protocol=0x1, type=0x1, key=0x0, size=0x2a): id = 160
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu warning: sys_spu_thread_group_connect_event_all_threads(id=156, eq_id=160, req=0xffffffffffff0000, spup_addr=0x32b953c9)
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu warning: *** spup -> 16
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_event warning: *** sys_event_port created: id = 161
HLE: W {PPU[1] Thread (main_thread)[0x01dbc010]} sys_event warning: sys_event_port_connect_local(eport_id=161, equeue_id=160)
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_ppu_thread : *** New PPU Thread [CriAtom] (joinable, entry=0x0): id = 162
HLE: ! {PPU[1] Thread (main_thread)[0x01dbc010]} sys_ppu_thread : *** New PPU Thread [CriAtom] (joinable, entry=0x0): id = 163
HLE: W {PPU[162] Thread (CriAtom)[0x00000000]} sys_spu warning: sys_spu_thread_group_start(id=156)
HLE: E {PPU[1] Thread (main_thread)[0x01dbc010]} sys_spu TODO: sys_spu_thread_group_connect_event(id=156, eq=160, et=0x2)
HLE: W {PPU[162] Thread (CriAtom)[0x00000000]} sys_spu warning: sys_spu_thread_group_join(id=156, cause_addr=0x0, status_addr=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x0102c01c]} cellSysmodule warning: cellSysmoduleIsLoaded(CELL_SYSMODULE_SPURS_JQ)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SPURS_JQ)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6004]} cellSpursJq TODO: cellSpursJobQueueAttributeInitialize
HLE: E {PPU[1] Thread (main_thread)[0x01dd6028]} cellSpursJq TODO: _cellSpursCreateJobQueueWithJobDescriptorPool
HLE: E {PPU[1] Thread (main_thread)[0x01dd6058]} cellSpursJq TODO: cellSpursJobQueuePort2Create
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a16bf0, attr_addr=0xd000f130)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 164
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a16f60, attr_addr=0xd000ef00)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 165
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1d70b10, attr_addr=0xd000ee60)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 166
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9bdc8, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 167
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9be60, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 168
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9bef8, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 169
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9bf90, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 170
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9c028, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 171
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9c0c0, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 172
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9c158, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 173
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32b9c1f0, attr_addr=0xd000ed90)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 174
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1a16b60, attr_addr=0xd000f0a0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 175
HLE: W {PPU[1] Thread (main_thread)[0x01dc2058]} cellAudio warning: cellAudioPortOpen(audioParam_addr=0xd000ed60, portNum_addr=0xd000ed8c)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2058]} cellAudio warning: *** audio port opened(nChannel=8, nBlock=8, attr=0x0, level=1.000000): port = 0
HLE: W {PPU[1] Thread (main_thread)[0x01dc2040]} cellAudio warning: cellAudioPortStart(portNum=0x0)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32bdd600, attr_addr=0xd000ed00)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 176
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x32bf2640, attr_addr=0xd000f310)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 177
SPU: E {SPU[157] Thread (CriAtom)[0x00000a00]} SPURecompilerCore::Compile(ls_addr=0xa00): branch to 0x0 opcode
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330241c0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 178
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33039a50, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 179
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3304f2e0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 180
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33064b70, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 181
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3307a400, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 182
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3308fc90, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 183
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330a5520, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 184
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330badb0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 185
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330d0640, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 186
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330e5ed0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 187
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x330fb760, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 188
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33110ff0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 189
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33126880, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 190
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3313c110, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 191
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331519a0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 192
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33167230, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 193
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3317cac0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 194
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33192350, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 195
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331a7be0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 196
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331bd470, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 197
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331d2d00, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 198
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331e8590, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 199
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x331fde20, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 200
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332136b0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 201
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33228f40, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 202
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3323e7d0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 203
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33254060, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 204
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332698f0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 205
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3327f180, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 206
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33294a10, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 207
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332aa2a0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 208
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332bfb30, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 209
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332d53c0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 210
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x332eac50, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 211
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333004e0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 212
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33315d70, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 213
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3332b600, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 214
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33340e90, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 215
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33356720, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 216
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3336bfb0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 217
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33381840, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 218
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333970d0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 219
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333ac960, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 220
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333c21f0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 221
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333d7a80, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 222
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x333ed310, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 223
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33402ba0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 224
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33418430, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 225
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3342dcc0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 226
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33443550, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 227
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33458de0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 228
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3346e670, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 229
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33483f00, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 230
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33499790, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 231
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x334af020, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 232
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x334c48b0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 233
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x334da140, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 234
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x334ef9d0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 235
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33505260, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 236
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3351aaf0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 237
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33530380, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 238
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33545c10, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 239
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3355b4a0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 240
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33570d30, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 241
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x335865c0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 242
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3359be50, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 243
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x335b16e0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 244
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x335c6f70, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 245
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x335dc800, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 246
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x335f2090, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 247
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33607920, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 248
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3361d1b0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 249
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33632a40, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 250
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336482d0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 251
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3365db60, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 252
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336733f0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 253
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33688c80, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 254
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3369e510, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 255
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336b3da0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 256
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336c9630, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 257
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336deec0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 258
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x336f4750, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 259
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33709fe0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 260
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3371f870, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 261
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33735100, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 262
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3374a990, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 263
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33760220, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 264
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33775ab0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 265
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3378b340, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 266
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x337a0bd0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 267
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x337b6460, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 268
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x337cbcf0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 269
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x337e1580, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 270
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x337f6e10, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 271
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x3380c6a0, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 272
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x33821f30, attr_addr=0xd000eda0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 273
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_FONT)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_FREETYPE)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_FONTFT)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_L10N)
HLE: W {PPU[1] Thread (main_thread)[0x01dc4094]} cellFont warning: cellFontInitializeWithRevision(revisionFlags=0x61, config=0xd000f6cc)
HLE: W {PPU[1] Thread (main_thread)[0x01dc6004]} cellFontFT warning: cellFontInitLibraryFreeTypeWithRevision(revisionFlags=0x42, config_addr=0xd000f6e0, lib_addr_addr=0x1b8854c
HLE: W {PPU[1] Thread (main_thread)[0x01dc4070]} cellFont warning: cellFontOpenFontset: fontType->type = 65536 not supported yet. RD-R-LATIN.TTF will be used instead.
HLE: W {PPU[1] Thread (main_thread)[0x01dc4070]} cellFont warning: cellFontOpenFontFile(library_addr=0x30097000, fontPath="/dev_flash/data/font/SCE-PS3-RD-R-LATIN.TTF", subNum=0, uniqueId=0, font_addr=0x1b88550)
HLE: W {PPU[1] Thread (main_thread)[0x01dc4070]} cellFont warning: cellFontOpenFontMemory(library_addr=0x30097000, fontAddr=0x30099000, fontSize=38388, subNum=0, uniqueId=0, font_addr=0x1b88550)
HLE: E {PPU[1] Thread (main_thread)[0x01dc40ac]} cellFont TODO: cellFontSetResolutionDpi
HLE: E {PPU[1] Thread (main_thread)[0x01dc4040]} cellFont TODO: cellFontSetScalePoint
HLE: W {PPU[1] Thread (main_thread)[0x01dc4004]} cellFont warning: cellFontCreateRenderer(library_addr=0x30097000, config_addr=0xd000f6b8, Renderer_addr=0x1b88650)
HLE: W {PPU[1] Thread (main_thread)[0x01dc4064]} cellFont warning: cellFontRenderSurfaceInit(surface_addr=0x1b88750, buffer_addr=0x32a02e60, bufferWidthByte=512, pixelSizeByte=4, w=128, h=128)
HLE: E {PPU[1] Thread (main_thread)[0x01dc8004]} TODO: SJISstoUCS2s
HLE: W {PPU[1] Thread (main_thread)[0x0102e04c]} cellSysutil warning: cellSysutilGetSystemParamInt: CELL_SYSUTIL_SYSTEMPARAM_ID_ENTER_BUTTON_ASSIGN
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_NET)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SYSUTIL_NP_TUS)
HLE: W {PPU[1] Thread (main_thread)[0x0102c010]} cellSysmodule warning: cellSysmoduleLoadModule(CELL_SYSMODULE_SYSUTIL_AVCHAT2)
HLE: W {PPU[1] Thread (main_thread)[0x01dcc034]} cellNetCtl warning: cellNetCtlInit()
HLE: E {PPU[1] Thread (main_thread)[0x01db40ac]} TODO: sceNp2Init
HLE: E {PPU[1] Thread (main_thread)[0x01db216c]} sceNp TODO: sceNpManagerRegisterCallback
HLE: W {PPU[1] Thread (main_thread)[0x01dca004]} sys_net warning: sys_net_initialize_network_ex(param_addr=0xd000f6d8)
HLE: W {PPU[1] Thread (main_thread)[0x0102e0b8]} cellSysutil warning: cellSysutilRegisterCallback(slot=0, func_addr=0x1034db0, userdata=0x1a20f38)
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x34068190, attr_addr=0xd000f8b0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 274
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x340681c8, attr_addr=0xd000f8b0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x12): sq_id = 275
HLE: W {PPU[1] Thread (main_thread)[0x00817f08]} sys_semaphore warning: sys_semaphore_create(sem_addr=0x30154280, attr_addr=0xd000f8b0, initial_count=0, max_count=2)
HLE: ! {PPU[1] Thread (main_thread)[0x00817f08]} sys_semaphore : *** semaphore created [] (protocol=0x2): id = 276
HLE: W {PPU[1] Thread (main_thread)[0x00817f08]} sys_semaphore warning: sys_semaphore_create(sem_addr=0x30154290, attr_addr=0xd000f8b0, initial_count=0, max_count=2)
HLE: ! {PPU[1] Thread (main_thread)[0x00817f08]} sys_semaphore : *** semaphore created [] (protocol=0x2): id = 277
HLE: W {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x30119340, attr_addr=0xd000f8a0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x22): sq_id = 278
HLE: W {PPU[1] Thread (main_thread)[0x01dd80c4]} sys_lwcond warning: *** lwcond created [] (lwmutex_addr=0x30119340): id = 279
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [XG Job Worker] (joinable, entry=0x10461d8): id = 280
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [XG Job Worker] (joinable, entry=0x10461d8): id = 281
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ee90)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6034]} cellSpursJq TODO: _cellSpursJobQueuePort2CopyPushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd604c]} cellSpursJq TODO: _cellSpursJobQueuePort2PushJobBody
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: E {PPU[1] Thread (main_thread)[0x01dd6064]} cellSpursJq TODO: cellSpursJobQueuePort2Sync
HLE: W {PPU[1] Thread (main_thread)[0x01dc2088]} cellAudio warning: cellAudioGetPortConfig(portNum=0x0, portConfig_addr=0xd000ed00)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} New FBO (1280x720)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (0):
RSX: ! {RSXThread} *** prog id = 3
RSX: ! {RSXThread} *** vp id = 2
RSX: ! {RSXThread} *** fp id = 1
RSX: ! {RSXThread} *** vp data size = 64
RSX: ! {RSXThread} *** fp data size = 96
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
uniform vec4 fc16 = vec4(1.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc48 = vec4(1.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc80 = vec4(1.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = fc16.xxxx;
	r2 = fc48.xxxx;
	r1.z = fc80.xxxx.z;
	ocol0 = r0;
	ocol1 = r2;
	gl_FragDepth = r1.z;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
HLE: E {PPU[1] Thread (main_thread)[0x0102a040]} cellGcmSys error: cellGcmAddressToOffset(address=0x0,offset_addr=0x329d38dc)
HLE: E {PPU[1] Thread (main_thread)[0x0102a040]} cellGcmSys error: cellGcmAddressToOffset(address=0x0,offset_addr=0x329cda2c)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (1):
RSX: ! {RSXThread} *** prog id = 6
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 4
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 48
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 1.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r2 = fc32.xxxy;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (2):
RSX: ! {RSXThread} *** prog id = 8
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 7
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 144
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
uniform vec4 fc16 = vec4(0.000000, 1.000000, 0.000000, 0.000000);
uniform vec4 fc48 = vec4(0.000000, 1.000000, 0.000000, 0.000000);
uniform vec4 fc96 = vec4(0.996094, 0.003891, 0.000015, 0.000000);
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = fc16.xxxy;
	r2 = fc48.xxxy;
	r1.xyz = texture(tex0, tc0.xy).xyz;
	r1.z = vec4(dot(r1.xyz, fc96.xyz)).z;
	ocol0 = r0;
	ocol1 = r2;
	gl_FragDepth = r1.z;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (3):
RSX: ! {RSXThread} *** prog id = 9
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 7
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 144
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
uniform vec4 fc16 = vec4(0.000000, 1.000000, 0.000000, 0.000000);
uniform vec4 fc48 = vec4(0.000000, 1.000000, 0.000000, 0.000000);
uniform vec4 fc96 = vec4(0.996094, 0.003891, 0.000015, 0.000000);
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = fc16.xxxy;
	r2 = fc48.xxxy;
	r1.xyz = texture(tex0, tc0.xy).xyz;
	r1.z = vec4(dot(r1.xyz, fc96.xyz)).z;
	ocol0 = r0;
	ocol1 = r2;
	gl_FragDepth = r1.z;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (4):
RSX: ! {RSXThread} *** prog id = 12
RSX: ! {RSXThread} *** vp id = 11
RSX: ! {RSXThread} *** fp id = 10
RSX: ! {RSXThread} *** vp data size = 192
RSX: ! {RSXThread} *** fp data size = 224
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 tmp1;
vec4 dst_reg9 = vec4(0.0);
vec4 tmp0;
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
vec4 dst_reg8 = vec4(0.0);
uniform vec4 vc[468];
layout (location = 0) in vec4 in_pos;
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	tmp1.xyz = vc[90].xyzx.xyz;
	dst_reg9.x = vc[90].wwww.x;
	tmp0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	tmp0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	tmp0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	tmp0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
	dst_reg7.w = vec4(dot(vec4(tmp1.xyzx.xyz, 1.0), vc[7])).w;
	dst_reg7.z = vec4(dot(vec4(tmp1.xyzx.xyz, 1.0), vc[6])).z;
	dst_reg7.y = vec4(dot(vec4(tmp1.xyzx.xyz, 1.0), vc[5])).y;
	dst_reg7.x = vec4(dot(vec4(tmp1.xyzx.xyz, 1.0), vc[4])).x;
	dst_reg0 = tmp0;
	dst_reg8 = tmp0;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h1 = vec4(0.0, 0.0, 0.0, 0.0);
in vec4 tc1;
in vec4 tc0;
in vec4 tc2;
uniform vec4 fc128 = vec4(1.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc176 = vec4(0.125000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc208 = vec4(0.000000, 0.500000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0.xy = (tc1 / tc1.wwww).xy;
	r0.zw = (tc0.xxxy / tc0.wwww).zw;
	r0.zw = (r0.xxxy + -r0).zw;
	r0.y = vec4(dot(r0.zwzz.xy, r0.zwzz.xy)).y;
	r1.w = tc2.xxxx.w;
	h0.xy = ((r0.zwzz / sqrt(r0.yyyy)) / 2.0).xy;
	r0.y = inversesqrt(abs(r0.yyyy)).y;
	r0.w = fc128.xxxx.w;
	h1.x = ((r1.wwww / r0.yyyy) / 2.0).x;
	r0.z = min(h1.xxxx, fc176.xxxx).z;
	r0.xy = (h0 + fc208.yyyy).xy;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (5):
RSX: ! {RSXThread} *** prog id = 15
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 13
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 80
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r0.xyz = texture(tex0, tc0.xy).xyz;
	r1.xyz = texture(tex1, tc0.zwzz.xy).xyz;
	r0.xyz = (r0 + r1).xyz;
	h2.x = (r0 + r0.yyyy).x;
	r0.w = (h2.xxxx + r0.zzzz).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (6):
RSX: ! {RSXThread} *** prog id = 17
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 16
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 1056
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h3 = vec4(0.0, 0.0, 0.0, 0.0);
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc80 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc240 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc272 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc320 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc352 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc400 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc432 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc480 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc512 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc560 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc640 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc672 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc720 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc752 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc800 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc832 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc880 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc912 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc960 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc992 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc1040 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform sampler2D tex0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1.xy = tc0.xy;
	r0.xy = (r1 + fc32.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc80);
	r0.xy = (r1 + fc112.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc160 + h3);
	r0.xy = (r1 + fc192.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc240 + h3);
	r0.xy = (r1 + fc272.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc320 + h3);
	r0.xy = (r1 + fc352.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc400 + h3);
	r0.xy = (r1 + fc432.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc480 + h3);
	r0.xy = (r1 + fc512.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc560 + h3);
	r0.xy = (r1 + fc592.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc640 + h3);
	r0.xy = (r1 + fc672.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc720 + h3);
	r0.xy = (r1 + fc752.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc800 + h3);
	r0.xy = (r1 + fc832.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc880 + h3);
	r0.xy = (r1 + fc912.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc960 + h3);
	r0.xy = (r1 + fc992.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r0 = (r0 * fc1040 + h3);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (7):
RSX: ! {RSXThread} *** prog id = 18
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 16
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 1056
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h3 = vec4(0.0, 0.0, 0.0, 0.0);
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc80 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc240 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc272 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc320 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc352 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc400 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc432 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc480 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc512 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc560 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc640 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc672 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc720 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc752 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc800 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc832 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc880 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc912 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc960 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc992 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc1040 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform sampler2D tex0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1.xy = tc0.xy;
	r0.xy = (r1 + fc32.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc80);
	r0.xy = (r1 + fc112.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc160 + h3);
	r0.xy = (r1 + fc192.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc240 + h3);
	r0.xy = (r1 + fc272.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc320 + h3);
	r0.xy = (r1 + fc352.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc400 + h3);
	r0.xy = (r1 + fc432.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc480 + h3);
	r0.xy = (r1 + fc512.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc560 + h3);
	r0.xy = (r1 + fc592.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc640 + h3);
	r0.xy = (r1 + fc672.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc720 + h3);
	r0.xy = (r1 + fc752.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc800 + h3);
	r0.xy = (r1 + fc832.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc880 + h3);
	r0.xy = (r1 + fc912.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	h3 = (r0 * fc960 + h3);
	r0.xy = (r1 + fc992.xyxx).xy;
	r0 = texture(tex0, r0.xy);
	r0 = (r0 * fc1040 + h3);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (8):
RSX: ! {RSXThread} *** prog id = 20
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 240
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (9):
RSX: ! {RSXThread} *** prog id = 23
RSX: ! {RSXThread} *** vp id = 22
RSX: ! {RSXThread} *** fp id = 21
RSX: ! {RSXThread} *** vp data size = 192
RSX: ! {RSXThread} *** fp data size = 224
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg1 = vec4(0.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg8 = vec4(0.0);
vec4 dst_reg9 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
vec4 dst_reg10 = vec4(0.0);
vec4 dst_reg11 = vec4(0.0);
uniform vec4 vc[468];
layout (location = 8) in vec4 in_tc0;
layout (location = 9) in vec4 in_tc1;
layout (location = 0) in vec4 in_pos;
out vec4 diff_color;
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;
out vec4 tc3;
out vec4 tc4;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	diff_color = dst_reg1;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	tc3 = dst_reg10;
	tc4 = dst_reg11;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg1 = vc[252];
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg8.xy = in_tc1.xyxx.xy;
	dst_reg9.xy = -in_tc1.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
	dst_reg10.x = -in_tc1.xxxx.x;
	dst_reg10.y = in_tc1.yyyy.y;
	dst_reg11.x = in_tc1.xxxx.x;
	dst_reg11.y = -in_tc1.yyyy.y;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
in vec4 tc0;
in vec4 tc1;
in vec4 tc2;
in vec4 tc3;
in vec4 tc4;
uniform sampler2D tex0;
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r1.zw = tc0.xxxy.zw;
	r0.xy = (tc1 + r1.zwzz).xy;
	r0 = texture(tex0, r0.xy);
	r1.xy = (tc2 + r1.zwzz).xy;
	r2 = texture(tex0, r1.xy);
	h2 = (r0 + r2);
	r0.xy = (tc3 + r1.zwzz).xy;
	r0 = texture(tex0, r0.xy);
	h2 = (h2 + r0);
	r0.xy = (tc4 + r1.zwzz).xy;
	r0 = texture(tex0, r0.xy);
	r0 = ((h2 + r0) / 4.0);
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (10):
RSX: ! {RSXThread} *** prog id = 25
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 64
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (11):
RSX: ! {RSXThread} *** prog id = 27
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 608
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (12):
RSX: ! {RSXThread} *** prog id = 30
RSX: ! {RSXThread} *** vp id = 29
RSX: ! {RSXThread} *** fp id = 28
RSX: ! {RSXThread} *** vp data size = 128
RSX: ! {RSXThread} *** fp data size = 80
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg8 = vec4(0.0);
vec4 dst_reg9 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg8.xy = vc[49].xyxx.xy;
	dst_reg9.xy = vc[49].zwzz.xy;
	dst_reg9.zw = vc[50].zzzw.zw;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.996094, 0.003891, 0.000015, 0.000000);
uniform vec4 fc64 = vec4(-1.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r1.xyz = texture(tex0, tc0.xy).xyz;
	h0.x = (vec4(dot(r1.xyz, fc32.xyz)) * 2.0).x;
	r0.x = (h0 + fc64.xxxx).x;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} FP not found in buffer!
RSX: ! {RSXThread} Add program (13):
RSX: ! {RSXThread} *** prog id = 32
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 144
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (14):
RSX: ! {RSXThread} *** prog id = 35
RSX: ! {RSXThread} *** vp id = 34
RSX: ! {RSXThread} *** fp id = 33
RSX: ! {RSXThread} *** vp data size = 48
RSX: ! {RSXThread} *** fp data size = 128
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
uniform vec4 vc[468];
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = (vc[466].xyxx + in_tc0.xyxx).xy;
	dst_reg0.xy = (in_pos.xyxx * vc[467].xyxx).xy;
	dst_reg0.zw = vc[465].xxxy.zw;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h1 = vec4(0.0, 0.0, 0.0, 0.0);
uniform vec4 fc16 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform sampler2D tex0;
uniform sampler2D tex1;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	h0.w = fc16.xxxx.w;
	h1.x = texture(tex0, tc0.xy).x;
	h0.w = (h1.xxxx * fc64.xxxx + h0).w;
	h0.xyz = texture(tex1, tc0.xy).xyz;
	h0.xyz = (h0 * fc112).xyz;
	ocol0 = h0;
}

RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (15):
RSX: ! {RSXThread} *** prog id = 38
RSX: ! {RSXThread} *** vp id = 37
RSX: ! {RSXThread} *** fp id = 36
RSX: ! {RSXThread} *** vp data size = 112
RSX: ! {RSXThread} *** fp data size = 608
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg8 = vec4(0.0);
vec4 dst_reg9 = vec4(0.0);
vec4 dst_reg10 = vec4(0.0);
vec4 dst_reg11 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 9) in vec4 in_tc1;
layout (location = 10) in vec4 in_tc2;
layout (location = 11) in vec4 in_tc3;
layout (location = 12) in vec4 in_tc4;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;
out vec4 tc3;
out vec4 tc4;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	tc3 = dst_reg10;
	tc4 = dst_reg11;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg8.xy = in_tc1.xyxx.xy;
	dst_reg9.xy = in_tc2.xyxx.xy;
	dst_reg10.xy = in_tc3.xyxx.xy;
	dst_reg11.xy = in_tc4.xyxx.xy;
	dst_reg0.xy = (in_pos.xyxx * vc[467].xyxx).xy;
	dst_reg0.zw = vc[466].xxxy.zw;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex2;
uniform sampler2D tex1;
uniform sampler2D tex0;
uniform sampler2D tex3;
in vec4 tc3;
in vec4 tc1;
in vec4 tc0;
in vec4 tc4;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc96 = vec4(0.333252, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.333252, 0.000000, 0.000000, 0.000000);
uniform vec4 fc176 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc224 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc256 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc304 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc384 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc416 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc448 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc496 = vec4(0.000061, 0.000000, 0.000000, 0.000000);
uniform vec4 fc560 = vec4(0.003922, -0.001961, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.003922, -0.001961, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;

void main()
{
	h0.xyz = texture(tex2, tc3.xy).xyz;
	h1.xyz = (h0 * fc32.xxxx + fc32.yyyy).xyz;
	h0.xyz = (h0 * fc64.xxxx + fc64.yyyy).xyz;
	h0.w = vec4(dot(h0.xyz, fc96.xxxx.xyz)).w;
	h1.w = vec4(dot(h1.xyz, fc128.xxxx.xyz)).w;
	h1.xyz = (h1 + -h1.wwww).xyz;
	h4.xyz = clamp((h1 * fc176.xxxx + h1.wwww), 0.0, 1.0).xyz;
	h0.xyz = (h0 + -h0.wwww).xyz;
	h0.xyz = (h0 * fc224.xxxx + h0.wwww).xyz;
	h3.xyz = (h0 * fc256.zzzz + fc256.wwww).xyz;
	h2.xyz = texture(tex1, tc1.xy).xyz;
	h4.xyz = (h4 * fc304.zzzz + fc304.wwww).xyz;
	h0 = texture(tex0, tc0.xy);
	h1.xyz = (h0 * h3).xyz;
	h2.xyz = (h3 * h2 + h4).xyz;
	h0.w = clamp(vec4(dot(h0, fc384)), 0.0, 1.0).w;
	h0.xyz = clamp((h2 * fc416.yyyy), 0.0, 1.0).xyz;
	h1.xyz = (h1 * fc448.xxxx).xyz;
	h5.x = texture(tex3, tc4.xy).x;
	h4.xyz = clamp(max(h1, fc496.xxxx), 0.0, 1.0).xyz;
	h0.xyz = (-h4 * h0 + h0).xyz;
	h0.xyz = (h4 + h0).xyz;
	h0.xyz = (h5.xxxx * fc560.xxxx + h0).xyz;
	h0.xyz = (h0 + fc592.yyyy).xyz;
	ocol0 = h0;
	ocol1 = h2;
	ocol2 = h4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: W {RSXThread} FP not found in buffer!
RSX: W {RSXThread} VP not found in buffer!
RSX: E {RSXThread} Program end before buffer end.
RSX: ! {RSXThread} Add program (16):
RSX: ! {RSXThread} *** prog id = 41
RSX: ! {RSXThread} *** vp id = 40
RSX: ! {RSXThread} *** fp id = 39
RSX: ! {RSXThread} *** vp data size = 160
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg1 = vec4(0.0);
vec4 dst_reg2 = vec4(0.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg9 = vec4(0.0);
vec4 tmp0;
vec4 dst_reg8 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 3) in vec4 in_diff_color;
layout (location = 4) in vec4 in_spec_color;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 diff_color;
out vec4 spec_color;
out vec4 tc0;
out vec4 tc1;
out vec4 tc2;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	diff_color = dst_reg1;
	spec_color = dst_reg2;
	tc0 = dst_reg7;
	tc1 = dst_reg8;
	tc2 = dst_reg9;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg1 = in_diff_color.yzwx;
	dst_reg2 = in_spec_color.yzwx;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg9.xy = vc[252].xxxx.xy;
	tmp0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	tmp0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	tmp0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	tmp0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
	dst_reg8.xy = (tmp0.xyxx * vc[467].xyxx + vc[467].xxxx).xy;
	dst_reg0 = tmp0;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 cc0;
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex11;
in vec4 tc1;
in vec4 diff_color;
in vec4 tc2;
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc96 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc352 = vec4(1.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex11, tc1.xy);
	h4 = diff_color;
	h5.w = h4.w;
	h5.x = vec4(equal(r1.wwww, fc64.xxxx)).x;
	h1.x = vec4(equal(h5, fc96.xxxx)).x;
	h0.w = tc2.xxxx.w;
	cc0.x = h0.wwww.x;
	h0.w = vec4(equal(h0, fc160.xxxx)).w;
	h0.x = vec4(equal(h0.wwww, fc192.xxxx)).x;
	r0.z = r0.z;
	cc0.w = (h0.xxxx * h1.xxxx).w;
	h5.x = h4.x;
	h5.z = h4.z;
	if(any(notEqual(cc0.wwww, vec4(0.0)))) h5.x = r1.x;
	r0 = h4;
	if(any(notEqual(cc0.wwww, vec4(0.0)))) h5.z = r1.z;
	h2.x = h4.yyyy.x;
	if(any(notEqual(cc0.wwww, vec4(0.0)))) h5.w = fc352.xxxx.w;
	if(any(notEqual(cc0.wwww, vec4(0.0)))) h2.x = r1.yyyy.x;
	h5.y = h2.xxxx.y;
	if(any(notEqual(cc0.xxxx, vec4(0.0)))) r0 = h5;
	ocol0 = r0;
}

RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (17):
RSX: ! {RSXThread} *** prog id = 42
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (18):
RSX: ! {RSXThread} *** prog id = 43
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (19):
RSX: ! {RSXThread} *** prog id = 44
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
HLE: E {PPU[1] Thread (main_thread)[0x01dc0004]} cellAvconfExt TODO: cellVideoOutSetGamma
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (20):
RSX: ! {RSXThread} *** prog id = 45
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (21):
RSX: ! {RSXThread} *** prog id = 46
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (22):
RSX: ! {RSXThread} *** prog id = 47
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (23):
RSX: ! {RSXThread} *** prog id = 48
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (24):
RSX: ! {RSXThread} *** prog id = 49
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (25):
RSX: ! {RSXThread} *** prog id = 50
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (26):
RSX: ! {RSXThread} *** prog id = 51
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (27):
RSX: ! {RSXThread} *** prog id = 52
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (28):
RSX: ! {RSXThread} *** prog id = 53
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (29):
RSX: ! {RSXThread} *** prog id = 54
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (30):
RSX: ! {RSXThread} *** prog id = 55
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (31):
RSX: ! {RSXThread} *** prog id = 56
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (32):
RSX: ! {RSXThread} *** prog id = 57
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (33):
RSX: ! {RSXThread} *** prog id = 58
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (34):
RSX: ! {RSXThread} *** prog id = 59
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (35):
RSX: ! {RSXThread} *** prog id = 60
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (36):
RSX: ! {RSXThread} *** prog id = 61
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (37):
RSX: ! {RSXThread} *** prog id = 62
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (38):
RSX: ! {RSXThread} *** prog id = 63
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (39):
RSX: ! {RSXThread} *** prog id = 64
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (40):
RSX: ! {RSXThread} *** prog id = 65
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
HLE: W {PPU[1] Thread (main_thread)[0x0102e070]} cellSysutil warning: cellMsgDialogOpen2(type=0x85, msgString_addr=0x1b889f4, callback_addr=0x0, userData=0x0, extParam=0x0)
TTY: 
Checking game data...RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (41):
RSX: ! {RSXThread} *** prog id = 66
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (42):
RSX: ! {RSXThread} *** prog id = 67
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (43):
RSX: ! {RSXThread} *** prog id = 68
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (44):
RSX: ! {RSXThread} *** prog id = 69
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (45):
RSX: ! {RSXThread} *** prog id = 70
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (46):
RSX: ! {RSXThread} *** prog id = 71
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (47):
RSX: ! {RSXThread} *** prog id = 72
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (48):
RSX: ! {RSXThread} *** prog id = 73
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [SysGameData::check_broken] (detached, entry=0x1044fa0): id = 282
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01db0028]} cellGame warning: cellGameDataCheck(type=0x3, dirName_addr=0x31d75004, size_addr=0xd010fbd0)
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01db0004]} cellGame warning: cellGameContentPermit(contentInfoPath_addr=0xd010fbe0, usrdirPath_addr=0xd010fc60)
HLE: ! {PPU[282] Thread (SysGameData::check_broken)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/USRDIR/resource.cpk" opened: fd = 283
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x0102804c]} sys_fs warning: cellFsFstat(fd=283, sb_addr=0xd010f560)
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=283, offset=0x0, buf_addr=0x341f4870, buffer_size=524288 nread=0xffffffffd010f860)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028004]} sys_fs warning: cellFsClose(fd=283)
HLE: ! {PPU[282] Thread (SysGameData::check_broken)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/resource.cpk" opened: fd = 284
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x0102804c]} sys_fs warning: cellFsFstat(fd=284, sb_addr=0xd010f560)
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028064]} sys_fs warning: cellFsReadWithOffset(fd=284, offset=0x0, buf_addr=0x341f4870, buffer_size=524288 nread=0xffffffffd010f860)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028004]} sys_fs warning: cellFsClose(fd=284)
HLE: ! {PPU[282] Thread (SysGameData::check_broken)[0x01028034]} sys_fs : "/dev_hdd0/game/BLES01936/USRDIR/resource.cpk" opened: fd = 285
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x0102804c]} sys_fs warning: cellFsFstat(fd=285, sb_addr=0xd010f580)
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028004]} sys_fs warning: cellFsClose(fd=285)
HLE: ! {PPU[282] Thread (SysGameData::check_broken)[0x01028034]} sys_fs : "/dev_bdvd/PS3_GAME/USRDIR/resource.cpk" opened: fd = 286
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x0102804c]} sys_fs warning: cellFsFstat(fd=286, sb_addr=0xd010f580)
HLE: W {PPU[282] Thread (SysGameData::check_broken)[0x01028004]} sys_fs warning: cellFsClose(fd=286)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (49):
RSX: ! {RSXThread} *** prog id = 74
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (50):
RSX: ! {RSXThread} *** prog id = 75
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (51):
RSX: ! {RSXThread} *** prog id = 76
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (52):
RSX: ! {RSXThread} *** prog id = 77
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
HLE: W {PPU[1] Thread (main_thread)[0x0102e058]} cellSysutil warning: cellMsgDialogAbort()
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (53):
RSX: ! {RSXThread} *** prog id = 78
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (54):
RSX: ! {RSXThread} *** prog id = 79
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (55):
RSX: ! {RSXThread} *** prog id = 80
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (56):
RSX: ! {RSXThread} *** prog id = 81
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (57):
RSX: ! {RSXThread} *** prog id = 82
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (58):
RSX: ! {RSXThread} *** prog id = 83
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (59):
RSX: ! {RSXThread} *** prog id = 84
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (60):
RSX: ! {RSXThread} *** prog id = 85
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x20
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x3f800000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x1c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x43a00000, 0x43340000, 0x0, 0x43a00000, 0x0, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43b40000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44200000, 0x43b40000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44200000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
HLE: ! {PPU[1] Thread (main_thread)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [Achievement Init] (detached, entry=0x1048640): id = 287
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} sceNpTrophy warning: sceNpTrophyRegisterContext(context=0, handle=0, statusCb_addr=0x1048638, arg_addr=0x304e3500, options=0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42b40000, 0x0, 0x0, 0x3f800000, 0x43200000, 0x42b40000, 0x0, 0x3f800000, 0x3f800000, 0x43200000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x42340000, 0x0, 0x0, 0x3f800000, 0x42a00000, 0x42340000, 0x0, 0x3f800000, 0x3f800000, 0x42a00000, 0x0, 0x0, 0x3f800000, 0x0)
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/tropconf.sfm')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0_00.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0_01.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0_02.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0_03.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/icon0_05.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop000.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop001.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop002.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop003.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop004.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop005.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop006.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop007.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop008.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop009.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop010.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop011.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop012.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop013.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop014.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop015.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop016.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop017.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop018.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop019.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop020.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop021.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop022.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop023.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop024.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop025.png')
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x41b00000, 0x0, 0x0, 0x3f800000, 0x42200000, 0x41b00000, 0x0, 0x3f800000, 0x3f800000, 0x42200000, 0x0, 0x0, 0x3f800000, 0x0)
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop026.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop027.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop028.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop029.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop030.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop031.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop032.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop033.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop034.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop035.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop036.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop037.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop038.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop039.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop040.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop041.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop042.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop043.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop044.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop045.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop046.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop047.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop048.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop049.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop050.png')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/trop051.png')
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (61):
RSX: ! {RSXThread} *** prog id = 86
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 19
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
uniform sampler2D tex1;
uniform sampler2D tex2;
uniform sampler2D tex3;
in vec4 tc0;
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc160 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;

void main()
{
	r0 = texture(tex0, tc0.xy);
	r1 = texture(tex1, tc0.xy);
	h0 = (r0 + r1);
	r1 = texture(tex2, tc0.xy);
	h0 = (h0 + r1);
	r2 = texture(tex3, tc0.xy);
	h0 = (h0 + r2);
	h0 = (h0 * fc128);
	h0 = (h0 * fc160.wwww);
	r0.w = (h0 * fc192.xxxx).w;
	r0.xyz = h0.xyz;
	ocol0 = r0;
	ocol1 = r2;
}

HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2004]} vfsLocalFile::Create('d:/emucr-rpcs3-git-20140323-x86/emucr-rpcs3-git-20140323-x86/dev_hdd0/home/00000001/trophy/npwr04207_00/tropusr.dat')
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2040]} sceNpTrophy warning: sceNpTrophyGetGameInfo(context=0, handle=0, details_addr=0xd011f928, data_addr=0xd011f914)
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd2070]} sceNpTrophy warning: sceNpTrophyGetTrophyUnlockState(context=0, handle=0, flags_addr=0xd011f904, count_addr=0xd011f900)
HLE: W {PPU[287] Thread (Achievement Init)[0x01dd804c]} sys_lwmutex warning: sys_lwmutex_create(lwmutex_addr=0x1da6910, attr_addr=0xd011f880)
HLE: ! {PPU[287] Thread (Achievement Init)[0x01dd804c]} sys_lwmutex : *** lwmutex created [] (attribute=0x11): sq_id = 288
HLE: ! {PPU[287] Thread (Achievement Init)[0x01dd8028]} sys_ppu_thread : *** New PPU Thread [Achievement] (joinable, entry=0x1048648): id = 289
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x0, 0x0, 0x3f800000, 0x0, 0x3b000000, 0x3b638e39, 0x43800000, 0x43100000, 0x0, 0x3f800000, 0x3f800000, 0x3b000000, 0x3b638e39, 0x0, 0x43100000, 0x0, 0x0, 0x3f800000, 0x3b000000, 0x3b638e39)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (62):
RSX: ! {RSXThread} *** prog id = 87
RSX: ! {RSXThread} *** vp id = 14
RSX: ! {RSXThread} *** fp id = 24
RSX: ! {RSXThread} *** vp data size = 96
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 9) in vec4 in_tc1;
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.zw = in_tc1.xxxy.zw;
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
layout (location = 0) out vec4 ocol0;

void main()
{
	r1 = texture(tex1, tc0.zwzz.xy);
	r0 = texture(tex0, tc0.xy);
	r0.xyz = (r0 + r1).xyz;
	r0.w = (r0 * r1).w;
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x301
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x7c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0, 0x3acccccd, 0x3b360b61, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x3acccccd, 0x3b360b61, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x3acccccd, 0x3b360b61)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x43340000, 0x0, 0x0, 0x3f800000, 0x43a00000, 0x43340000, 0x0, 0x3f800000, 0x3f800000, 0x43a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (63):
RSX: ! {RSXThread} *** prog id = 88
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 26
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r1 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r2 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r3 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 r4 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h5 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex1;
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(2.000000, -1.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.500000, 0.000000);
uniform vec4 fc112 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc192 = vec4(-5.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc592 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;
layout (location = 1) out vec4 ocol1;
layout (location = 2) out vec4 ocol2;
layout (location = 3) out vec4 ocol3;

void main()
{
	r0.xyz = texture(tex1, tc0.xy).xyz;
	r1.zw = (r0.xxxy * fc32.xxxx + fc32.yyyy).zw;
	r1.x = (r0.zzzz * fc64.zzzz).x;
	r1.w = -r1.w;
	r0.x = (r1 * fc112.yyyy).x;
	r2.xy = ((r1.zwzz * r0.xxxx) / 8.0).xy;
	r0.zw = tc0.xxxy.zw;
	r2.zw = (r2.xxxy * fc192.xxxx + r0).zw;
	r3.zw = (r2 + r2.xxxy).zw;
	r4.xyz = texture(tex0, r2.zwzz.xy).xyz;
	r3.xy = (r2 + r3.zwzz).xy;
	r1.zw = (r2.xxxy + r3.xxxy).zw;
	r0.xyz = texture(tex0, r3.zwzz.xy).xyz;
	h0.xyz = (r4 + r0).xyz;
	r1.zw = r1.zw;
	r2.zw = (r2.xxxy + r1).zw;
	r0.zw = (r2.xxxy + r2).zw;
	r3.xyz = texture(tex0, r3.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r3).xyz;
	r3.xyz = texture(tex0, r2.zwzz.xy).xyz;
	h5.xyz = (h0 + r3).xyz;
	r1.zw = (r2.xxxy + r0).zw;
	r0.xyz = texture(tex0, r0.zwzz.xy).xyz;
	h0.xyz = (h5 + r0).xyz;
	r0.zw = (r2.xxxy + r1).zw;
	r2.xyz = texture(tex0, r1.zwzz.xy).xyz;
	h0.xyz = (h0 + r2).xyz;
	r2.xyz = texture(tex0, r0.zwzz.xy).xyz;
	r0.xyz = ((h0 + r2) / 8.0).xyz;
	r0.w = (r1.xxxx * fc592.xxxx).w;
	ocol0 = r0;
	ocol1 = r2;
	ocol2 = r3;
	ocol3 = r4;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: ! {RSXThread} Add program (64):
RSX: ! {RSXThread} *** prog id = 89
RSX: ! {RSXThread} *** vp id = 5
RSX: ! {RSXThread} *** fp id = 31
RSX: ! {RSXThread} *** vp data size = 80
RSX: ! {RSXThread} *** fp data size = 416
RSX: ! {RSXThread} *** vp shader = 
#version 330

uniform mat4 scaleOffsetMat = mat4(1.0);
vec4 dst_reg7 = vec4(0.0);
vec4 dst_reg0 = vec4(0.0f, 0.0f, 0.0f, 1.0f);
layout (location = 8) in vec4 in_tc0;
layout (location = 0) in vec4 in_pos;
uniform vec4 vc[468];
out vec4 tc0;

void func0();

void main()
{
	func0();
	gl_Position = dst_reg0;
	tc0 = dst_reg7;
	gl_Position = gl_Position * scaleOffsetMat;
}

void func0()
{
	dst_reg7.xy = in_tc0.xyxx.xy;
	dst_reg0.w = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[3])).w;
	dst_reg0.z = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[2])).z;
	dst_reg0.y = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[1])).y;
	dst_reg0.x = vec4(dot(vec4(in_pos.xyzx.xyz, 1.0), vc[0])).x;
}

RSX: ! {RSXThread} *** fp shader = 
#version 330

vec4 r0 = vec4(0.0, 0.0, 0.0, 0.0);
vec4 h2 = vec4(0.0, 0.0, 0.0, 0.0);
uniform sampler2D tex0;
in vec4 tc0;
uniform vec4 fc32 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc64 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
uniform vec4 fc128 = vec4(0.000000, 0.000000, 0.000000, 0.000000);
layout (location = 0) out vec4 ocol0;

void main()
{
	r0 = texture(tex0, tc0.xy);
	h2 = (r0 + -fc32);
	h2 = clamp((h2 * fc64), 0.0, 1.0);
	h2 = (h2 + -r0);
	r0 = (h2 * fc128 + r0);
	ocol0 = r0;
}

RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {PPU[1] Thread (main_thread)[0x0102e070]} cellSysutil warning: cellMsgDialogOpen2(type=0x1081, msgString_addr=0x0, callback_addr=0x0, userData=0x0, extParam=0x0)
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_RENDER_ENABLE: Offset=0x000000, Mode=0x1
RSX: W {RSXThread} TODO: NV4097_SET_ZPASS_PIXEL_COUNT_ENABLE: 0
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_SHADER_PACKER(0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x1f01
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x6c020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
G: E {PPU[1] Thread (main_thread)[0x0102e070]} Exception: Access violation: addr = 0x0 (is_alive=1, last_syscall=0x7603d3db (cellMsgDialogOpen2))
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} TODO: NV4097_SET_WINDOW_OFFSET: x=0, y=0
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_TRANSFORM_BRANCH_BITS(0x0)
RSX: W {RSXThread} TODO: NV4097_SET_ANTI_ALIASING_CONTROL: 0xffff0000
RSX: W {RSXThread} NV4097_SET_COLOR_MASK_MRT: 0xf0
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x101
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x4020
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x44340000, 0x0, 0x0, 0x3f800000, 0x44a00000, 0x44340000, 0x0, 0x3f800000, 0x3f800000, 0x44a00000, 0x0, 0x0, 0x3f800000, 0x0)
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_INPUT_MASK: 0x119
RSX: W {RSXThread} NV4097_SET_VERTEX_ATTRIB_OUTPUT_MASK: 0x18021
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: W {RSXThread} NV4097_SET_TEX_COORD_CONTROL
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_INLINE_ARRAY(0x0, 0x0, 0x0, 0xff000000, 0x44a00000, 0x0, 0x0, 0xff000000, 0x0, 0x44340000, 0x0, 0xff000000, 0x44a00000, 0x44340000, 0x0, 0xff000000)
RSX: E {RSXThread} TODO: CELL_GCM_NV4097_SET_CONTEXT_DMA_REPORT(0x66626660)
RSX: W {RSXThread} NV4097_GET_REPORT: Unimplemented type 1
HLE: W {SPU[157] Thread (CriAtom)[0x00000000]} cellSpurs warning: Spurs Kernel aborted
RSX: W {VBlank thread} VBlank thread aborted
RSX: W {RSXThread} RSX thread aborted
HLE: W {Audio Thread} cellAudio warning: Audio thread aborted
HLE: W {PPU[162] Thread (CriAtom)[0x00000000]} cellSpurs warning: SPURS Handler Thread 0 aborted
HLE: W {PPU[111] Thread (CRI FS File Access 2)[0x008b758c]} sys_cond warning: sys_cond_wait(id=110) aborted
HLE: W {PPU[119] Thread (CRI FS Data Decompression 0)[0x008b758c]} sys_cond warning: sys_cond_wait(id=118) aborted
HLE: W {PPU[99] Thread (CRI FS File Access 0)[0x008b758c]} sys_cond warning: sys_cond_wait(id=98) aborted
HLE: W {PPU[281] Thread (XG Job Worker)[0x00817f9c]} sys_semaphore warning: sys_semaphore_wait(276) aborted
HLE: W {PPU[68] Thread (Em File Thread)[0x01dd8034]} sys_lwcond warning: sys_lwcond_wait(id=52) aborted
HLE: W {PPU[103] Thread (CRI FS Memory File System)[0x008b758c]} sys_cond warning: sys_cond_wait(id=102) aborted
HLE: W {PPU[289] Thread (Achievement)[0x01dd8034]} sys_lwcond warning: sys_lwcond_wait(id=87) aborted
HLE: W {PPU[115] Thread (CRI FS File Access 3)[0x008b758c]} sys_cond warning: sys_cond_wait(id=114) aborted
HLE: W {PPU[107] Thread (CRI FS File Access 1)[0x008b758c]} sys_cond warning: sys_cond_wait(id=106) aborted
HLE: W {PPU[280] Thread (XG Job Worker)[0x00817f9c]} sys_semaphore warning: sys_semaphore_wait(276) aborted
HLE: ! All threads stopped...
RSX: W GLVertexProgram::Delete(): glDeleteShader(40) avoided
RSX: W GLShaderProgram::Delete(): glDeleteShader(39) avoided
MEM: ! Closing memory...
